import { IEntityAttributes, IResourceEntity } from "../../interfaces/api";
import { ITaskFactory } from "../factories/TaskFactory";
import ResourceEntity from "../ResourceEntity";
import { hasSave, IHasSave } from "./mixins/hasSave";
import { hasFetch, IHasFetch } from "./mixins/hasFetch";
import { TConstructor } from "../../types";
import { ObjectKey } from "../../interfaces/common";
import { IFactoryConstructors } from "../factories";
import { IHasLinked } from "./mixins/hasLinkedEntity";
import { ILeadFactory } from "../factories/LeadFactory";
import { IContactFactory } from "../factories/ContactFactory";
import { ICompanyFactory } from "../factories/CompanyFactory";
import { ICustomerFactory } from "../factories/CustomerFactory";
export interface TaskAttributes extends IEntityAttributes {
    id?: number;
    created_by?: number;
    updated_by?: number;
    created_at?: number;
    updated_at?: number;
    responsible_user_id?: number;
    group_id?: number;
    entity_id?: number;
    entity_type?: ObjectKey<IFactoryConstructors>;
    is_completed?: boolean;
    task_type_id?: number;
    text?: string;
    duration?: number;
    complete_till?: number;
    result?: ITaskResult;
    account_id?: number;
}
export interface ITaskResult {
    text?: string;
}
export declare type ITask = IResourceEntity<ITaskFactory> & TaskAttributes & IHasSave<ITaskFactory> & IHasFetch<ITaskFactory> & IHasLinked<ITaskFactory, ILeadFactory | IContactFactory | ICompanyFactory | ICustomerFactory>;
/**
 * Сделка
 */
export declare class BaseTask extends ResourceEntity<ITaskFactory> {
    id?: number;
    created_by?: number;
    updated_by?: number;
    created_at?: number;
    updated_at?: number;
    responsible_user_id?: number;
    group_id?: number;
    entity_id?: number;
    entity_type?: ObjectKey<IFactoryConstructors>;
    is_completed?: boolean;
    task_type_id?: number;
    text?: string;
    duration?: number;
    complete_till?: number;
    result?: ITaskResult;
    account_id?: number;
    getAttributes(): TaskAttributes;
    setAttributes(attributes: TaskAttributes): void;
}
export declare const mixins: (typeof hasSave | typeof hasFetch)[];
export declare const Task: TConstructor<ITask>;
