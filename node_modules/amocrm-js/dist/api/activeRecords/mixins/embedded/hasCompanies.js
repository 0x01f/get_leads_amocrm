"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hasContacts = void 0;
function hasContacts(Base) {
    return class HasEmbeddedCompanies extends Base {
        get companyList() {
            if (this._companyList) {
                return this._companyList;
            }
            this._companyList = {
                get: this.getContacts.bind(this),
                add: this.addContacts.bind(this),
                remove: this.removeContacts.bind(this)
            };
            return this._companyList;
        }
        getContacts() {
            var _a;
            return ((_a = this._embedded) === null || _a === void 0 ? void 0 : _a.companies) || [];
        }
        addContacts(criteria) {
            const embedded = this._embedded || {};
            const { companies = [] } = embedded;
            const factory = this.getFactory();
            const entityCriteria = factory.getEntityCriteria(criteria);
            companies.push(...entityCriteria);
            this._embedded = Object.assign(Object.assign({}, embedded), { companies });
            return this;
        }
        removeContacts(criteria) {
            const embedded = this._embedded || {};
            const embeddedContacts = embedded.companies || [];
            const ids = criteria.map(({ id }) => id);
            const companies = embeddedContacts.filter(({ id }) => !id || !ids.includes(id));
            this._embedded = Object.assign(Object.assign({}, embedded), { companies });
            return this;
        }
    };
}
exports.hasContacts = hasContacts;
//# sourceMappingURL=hasCompanies.js.map