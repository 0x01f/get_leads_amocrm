import { IResourceEntity, IResourceFactory } from "../../../interfaces/api";
import { ObjectKey } from "../../../interfaces/common";
import { IFactoryConstructors } from "../index";
export interface IGetEntityFactoryOptions<T extends IResourceEntity<IResourceFactory<T>>> {
    factory: IResourceFactory<T>;
    type: ObjectKey<IFactoryConstructors>;
}
export declare function getEntityFactory<T extends IResourceEntity<IResourceFactory<T>>>(options: IGetEntityFactoryOptions<T>): import("../LeadFactory").ILeadFactory | import("../ContactFactory").IContactFactory | import("../CompanyFactory").ICompanyFactory | import("../TagFactory").ITagFactory | import("../CustomerFactory").ICustomerFactory | import("../TaskFactory").ITaskFactory;
