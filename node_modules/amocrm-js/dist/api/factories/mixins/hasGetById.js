"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hasGetById = exports.GetByIdFactoryCriteriaItem = exports.getRequestCriteria = exports.GetWith = void 0;
const tslib_1 = require("tslib");
const FactoryCriteriaBuilder_1 = require("../common/FactoryCriteriaBuilder");
var GetWith;
(function (GetWith) {
    GetWith["CONTACTS"] = "contacts";
    GetWith["COMPANIES"] = "companies";
    GetWith["CATALOG_ELEMENTS"] = "catalog_elements";
    GetWith["LOSS_REASON"] = "loss_reason";
})(GetWith = exports.GetWith || (exports.GetWith = {}));
const getRequestCriteria = (criteria) => {
    if (!criteria) {
        return;
    }
    if (!criteria.with) {
        return;
    }
    return {
        with: criteria.with.join(',')
    };
};
exports.getRequestCriteria = getRequestCriteria;
class GetByIdFactoryCriteriaItem {
    fetchCriteria(criteria = {}) {
        if (!criteria.with) {
            return {};
        }
        return {
            with: criteria.with.join(',')
        };
    }
}
exports.GetByIdFactoryCriteriaItem = GetByIdFactoryCriteriaItem;
function hasGetById(Base) {
    return class HasGetById extends Base {
        constructor(client) {
            super(client);
            this.criteriaBuilder.add(new GetByIdFactoryCriteriaItem());
        }
        getById(identity, criteria, options) {
            return tslib_1.__awaiter(this, void 0, void 0, function* () {
                const url = this.getUrl('/' + identity);
                const request = this.getRequest();
                const requestCriteria = this.criteriaBuilder.getCriteria(FactoryCriteriaBuilder_1.CriteriaBuilderType.GET, criteria);
                const { data } = yield request.get(url, requestCriteria, options);
                if (!data) {
                    return null;
                }
                const instance = this.createEntity();
                instance.setAttributes(data);
                this.emit('getById');
                return instance;
            });
        }
    };
}
exports.hasGetById = hasGetById;
//# sourceMappingURL=hasGetById.js.map